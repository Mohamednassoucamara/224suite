const mongoose = require('mongoose');
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '.env') });

// Configuration de la connexion MongoDB
const connectDB = async () => {
  try {
    console.log('üîå Tentative de connexion √† MongoDB...');
    console.log('üîç URI MongoDB:', process.env.MONGODB_URI ? 'Pr√©sente' : 'Manquante');
    console.log('üìÅ R√©pertoire courant:', __dirname);
    console.log('üîß Variables d\'environnement:', Object.keys(process.env).filter(key => key.includes('MONGODB')));
    
    const conn = await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/224suite', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log(`‚úÖ MongoDB connect√© avec succ√®s !`);
    console.log(`üìç Host: ${conn.connection.host}`);
    console.log(`üóÑÔ∏è Database: ${conn.connection.name}`);
    console.log(`üîó URI: ${conn.connection.client.s.url}`);
    
    // Test de cr√©ation d'une collection
    const testCollection = mongoose.connection.collection('test');
    await testCollection.insertOne({ 
      test: true, 
      timestamp: new Date(),
      message: 'Test de connexion MongoDB Atlas'
    });
    console.log('‚úÖ Test d\'√©criture r√©ussi !');
    
    // Test de lecture
    const result = await testCollection.findOne({ test: true });
    console.log('‚úÖ Test de lecture r√©ussi !');
    
    // Nettoyage
    await testCollection.deleteOne({ test: true });
    console.log('‚úÖ Test de suppression r√©ussi !');
    
    console.log('\nüéâ Tous les tests MongoDB sont pass√©s avec succ√®s !');
    
    // Fermer la connexion
    await mongoose.connection.close();
    console.log('üîå Connexion ferm√©e.');
    
  } catch (error) {
    console.error('‚ùå Erreur de connexion MongoDB:', error.message);
    console.log('\nüîß V√©rifiez :');
    console.log('1. Votre fichier .env contient MONGODB_URI');
    console.log('2. L\'URI de connexion est correcte');
    console.log('3. L\'utilisateur et mot de passe sont valides');
    console.log('4. L\'IP est autoris√©e dans Network Access');
    console.log('5. Le cluster MongoDB Atlas est actif');
    
    process.exit(1);
  }
};

// Ex√©cuter le test
connectDB();
